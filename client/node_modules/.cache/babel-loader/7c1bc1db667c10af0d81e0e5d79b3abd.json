{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react-portfolio/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\n\nlet rerenderTree = state => {\n  ReactDOM.render(React.createElement(App, {\n    store: store,\n    state: store,\n    dispatch: store.dispatch.bind(store),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nrerenderTree(store.getState());\nstore.subscribe(() => {\n  const state = store.getState();\n  rerenderTree(state);\n});\nserviceWorker.unregister();","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-portfolio/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","store","rerenderTree","state","render","dispatch","bind","document","getElementById","getState","subscribe","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,IAAIC,YAAY,GAAGC,KAAK,IAAI;AAC1BL,EAAAA,QAAQ,CAACM,MAAT,CAAgB,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEH,KAAZ;AAAmB,IAAA,KAAK,EAAEA,KAA1B;AAAiC,IAAA,QAAQ,EAAEA,KAAK,CAACI,QAAN,CAAeC,IAAf,CAAoBL,KAApB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EACDM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADC;AAED,CAHD;;AAKAN,YAAY,CAACD,KAAK,CAACQ,QAAN,EAAD,CAAZ;AACAR,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAMP,KAAK,GAAGF,KAAK,CAACQ,QAAN,EAAd;AACAP,EAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,CAHD;AAKAH,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\n\n\nlet rerenderTree = state => {\n  ReactDOM.render(<App store={store} state={store} dispatch={store.dispatch.bind(store)} />,\n\tdocument.getElementById('root'));\n}\n\nrerenderTree(store.getState());\nstore.subscribe(() => {\n  const state = store.getState();\n  rerenderTree(state);\n});\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}