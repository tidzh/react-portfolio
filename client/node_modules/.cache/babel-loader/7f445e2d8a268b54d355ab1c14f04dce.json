{"ast":null,"code":"import _defineProperty from \"/Applications/MAMP/htdocs/react-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst UPDATE_MENU = 'UPDATE-MENU',\n      ADD_MENU = 'ADD-MENU',\n      ADD_MENU_ITEM = 'ADD-MENU-ITEM',\n      UPDATE_MENU_STATUS = 'UPDATE-MENU-STATUS';\nconst initialState = {\n  menuList: [{\n    \"id\": 1,\n    \"name\": \"Главная\",\n    \"url\": \"/\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Портфолио\",\n    \"url\": \"/portfolio\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Обратная связь\",\n    \"url\": \"/feedback\"\n  }, {\n    \"id\": 4,\n    \"name\": \"Услуги\",\n    \"url\": \"/services\"\n  }, {\n    \"id\": 5,\n    \"name\": \"Войти\",\n    \"url\": \"/login\"\n  }],\n  menuNew: {\n    \"name\": \"\",\n    \"url\": \"\"\n  },\n  isOpen: true\n};\n\nconst menuReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MENU:\n      {\n        const newMenu = {\n          id: state.menuList.length + 1,\n          name: state.menuNew.name,\n          url: state.menuNew.url\n        };\n\n        const copyState = _objectSpread({}, state);\n\n        copyState.menuList = [...state.menuList];\n        copyState.menuList.push(newMenu);\n        copyState.menuNew = {\n          name: '',\n          url: ''\n        };\n        return copyState;\n      }\n\n    case ADD_MENU_ITEM:\n      {\n        const copyState = _objectSpread({}, state);\n\n        return copyState;\n      }\n\n    case UPDATE_MENU:\n      {\n        const copyState = _objectSpread({}, state);\n\n        copyState.menuNew = _objectSpread({}, state.menuNew);\n\n        if (action.item !== false) {\n          copyState.menuList[action.item - 1][action.name] = action.value;\n        } else {\n          copyState.menuNew[action.name] = action.value;\n        }\n\n        return copyState;\n      }\n\n    case UPDATE_MENU_STATUS:\n      {\n        let stateCopy = _objectSpread({}, state);\n\n        stateCopy.isOpen = !stateCopy.isOpen;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addMenuCreator = () => ({\n  type: ADD_MENU\n}),\n      addMenuItemCreator = () => ({\n  type: ADD_MENU_ITEM\n}),\n      updateMenuCreator = (menuName, menuValue, menuItem) => ({\n  type: UPDATE_MENU,\n  name: menuName,\n  value: menuValue,\n  item: menuItem\n}),\n      updateMenuStatus = () => ({\n  type: UPDATE_MENU_STATUS\n});\nexport default menuReducer;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-portfolio/src/redux/menu-reducer.js"],"names":["UPDATE_MENU","ADD_MENU","ADD_MENU_ITEM","UPDATE_MENU_STATUS","initialState","menuList","menuNew","isOpen","menuReducer","state","action","type","newMenu","id","length","name","url","copyState","push","item","value","stateCopy","addMenuCreator","addMenuItemCreator","updateMenuCreator","menuName","menuValue","menuItem","updateMenuStatus"],"mappings":"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","sourcesContent":["const UPDATE_MENU = 'UPDATE-MENU',\n      ADD_MENU = 'ADD-MENU',\n      ADD_MENU_ITEM = 'ADD-MENU-ITEM',\n      UPDATE_MENU_STATUS = 'UPDATE-MENU-STATUS';\n\nconst initialState = {\n  menuList: [\n\t{\n\t  \"id\":1,\n\t  \"name\":\"Главная\",\n\t  \"url\":\"/\"\n\t},\n\t{\n\t  \"id\":2,\n\t  \"name\":\"Портфолио\",\n\t  \"url\":\"/portfolio\"\n\t},\n\t{\n\t  \"id\":3,\n\t  \"name\":\"Обратная связь\",\n\t  \"url\":\"/feedback\"\n\t},\n\t{\n\t  \"id\":4,\n\t  \"name\":\"Услуги\",\n\t  \"url\":\"/services\"\n\t},\n\t{\n\t  \"id\":5,\n\t  \"name\":\"Войти\",\n\t  \"url\":\"/login\"\n\t}\n  ],\n  menuNew: {\n\t\"name\":\"\",\n\t\"url\":\"\"\n  },\n  isOpen:true\n}\n\nconst menuReducer = (state = initialState, action) => {\n  switch (action.type) {\n\tcase ADD_MENU: {\n\t  const newMenu = {\n\t\tid: state.menuList.length + 1,\n\t\tname: state.menuNew.name,\n\t\turl: state.menuNew.url\n\t  }\n\t  const copyState = {...state};\n\t  copyState.menuList = [...state.menuList]\n\t  copyState.menuList.push(newMenu);\n\t  copyState.menuNew = {name: '', url: ''}\n\t  return copyState;\n\t}\n\tcase ADD_MENU_ITEM: {\n\t  const copyState = {...state};\n\t  return copyState\n\t}\n\tcase UPDATE_MENU: {\n\t  const copyState = {...state};\n\t  copyState.menuNew = {...state.menuNew}\n\t  if (action.item !== false) {\n\t\tcopyState.menuList[action.item - 1][action.name] = action.value;\n\t  } else {\n\t\tcopyState.menuNew[action.name] = action.value\n\t  }\n\t  return copyState;\n\t}\n\tcase UPDATE_MENU_STATUS: {\n\t  let stateCopy = {...state};\n\t  stateCopy.isOpen = !stateCopy.isOpen;\n\t  return stateCopy;\n\t}\n\tdefault:\n\t  return state;\n\t  \n  }\n}\nexport const addMenuCreator = () => ({type: ADD_MENU}),\n             addMenuItemCreator = () => ({type: ADD_MENU_ITEM}),\n             updateMenuCreator = (menuName, menuValue, menuItem) =>\n  ({type: UPDATE_MENU, name: menuName, value: menuValue, item: menuItem}),\n            updateMenuStatus = () => ({type: UPDATE_MENU_STATUS});\n\nexport default menuReducer;"]},"metadata":{},"sourceType":"module"}