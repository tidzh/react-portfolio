{"ast":null,"code":"import _defineProperty from \"/Applications/MAMP/htdocs/react-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst FEEDBACK_UPDATE = 'FEEDBACK_UPDATE',\n      FEEDBACK_SEND = 'FEEDBACK_SEND';\nconst initialState = {\n  feedbackArchive: [{}],\n  newFeedback: {\n    text: ''\n  }\n};\n\nconst feedbackReducer = (state = initialState, action) => {\n  let copyState;\n\n  switch (action.type) {\n    case FEEDBACK_UPDATE:\n      copyState = _objectSpread({}, state, {\n        newFeedback: _objectSpread({}, state.newFeedback[action.name] = action.value)\n      });\n      return copyState;\n\n    case FEEDBACK_SEND:\n      return _objectSpread({}, state, {\n        newFeedback: {\n          text: ''\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const feedbackInputCreator = (name, value) => ({\n  type: FEEDBACK_UPDATE,\n  name: name,\n  value: value\n}),\n      feedbackSendCreator = () => ({\n  type: FEEDBACK_SEND\n});\nexport default feedbackReducer;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-portfolio/src/redux/feedback-reducer.js"],"names":["FEEDBACK_UPDATE","FEEDBACK_SEND","initialState","feedbackArchive","newFeedback","text","feedbackReducer","state","action","copyState","type","name","value","feedbackInputCreator","feedbackSendCreator"],"mappings":";;;;;;AAAA,MAAMA,eAAe,GAAG,iBAAxB;AAAA,MACMC,aAAa,GAAI,eADvB;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,eAAe,EAAE,CAAC,EAAD,CADG;AAGpBC,EAAAA,WAAW,EAAE;AACVC,IAAAA,IAAI,EAAC;AADK;AAHO,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACxD,MAAIC,SAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACD,SAAKV,eAAL;AACES,MAAAA,SAAS,qBACJF,KADI;AAEVH,QAAAA,WAAW,oBAAMG,KAAK,CAACH,WAAN,CAAkBI,MAAM,CAACG,IAAzB,IAAiCH,MAAM,CAACI,KAA9C;AAFD,QAAT;AAIA,aAAOH,SAAP;;AACF,SAAKR,aAAL;AACE,+BAAYM,KAAZ;AAAmBH,QAAAA,WAAW,EAAC;AAACC,UAAAA,IAAI,EAAE;AAAP;AAA/B;;AACF;AACE,aAAOE,KAAP;AAVD;AAaD,CAfD;;AAiBA,OAAO,MAAMM,oBAAoB,GAAG,CAACF,IAAD,EAAOC,KAAP,MAAkB;AAACF,EAAAA,IAAI,EAAEV,eAAP;AAAwBW,EAAAA,IAAI,EAACA,IAA7B;AAAmCC,EAAAA,KAAK,EAACA;AAAzC,CAAlB,CAA7B;AAAA,MACME,mBAAmB,GAAG,OAAO;AAACJ,EAAAA,IAAI,EAAET;AAAP,CAAP,CAD5B;AAGP,eAAeK,eAAf","sourcesContent":["const FEEDBACK_UPDATE = 'FEEDBACK_UPDATE',\n      FEEDBACK_SEND  = 'FEEDBACK_SEND';\n\nconst initialState = {\n\tfeedbackArchive: [{\n\t}],\n\tnewFeedback: {\n    text:''\n}\n}\n\nconst feedbackReducer = (state = initialState, action) => {\n  let copyState;\n  switch (action.type) {\n\tcase FEEDBACK_UPDATE:\n\t  copyState = {\n\t    ...state,\n\t\tnewFeedback: {...state.newFeedback[action.name] = action.value}\n\t\t};\n\t  return copyState;\n\tcase FEEDBACK_SEND:\n\t  return  {...state, newFeedback:{text: ''}};\n\tdefault:\n\t  return state;\n  \n  }\n}\n\nexport const feedbackInputCreator = (name, value) => ({type: FEEDBACK_UPDATE, name:name, value:value}),\n             feedbackSendCreator = () => ({type: FEEDBACK_SEND});\n\nexport default feedbackReducer;"]},"metadata":{},"sourceType":"module"}