{"ast":null,"code":"import _slicedToArray from \"/Applications/MAMP/htdocs/react-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\"; // class HeaderContainer extends React.Component {\n//   state = {isOpen:true}\n// burgerStateCallback = () => this.setState ({isOpen: !this.state.isOpen});\n//\n// render () {\n//\n//   return (\n//     <StoreContext.Consumer>\n//       {\n//       (store) => {\n//         const state = store.getState();\n//         return <Header menuData={state.menu.menuList}\n//                        isOpen={this.state.isOpen}\n//                        burgerStateCallback={this.burgerStateCallback}/>\n//       }\n//     }\n//     </StoreContext.Consumer>)\n// }\n// }\n// export default HeaderContainer;\n\nconst _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\nconst mapStateToProps = state => {\n  return {\n    menuData: state.menu.menuList // isOpen: this.state.isOpen\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    burgerStateCallback: () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  };\n};\n\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default HeaderContainer;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-portfolio/src/components/Header/HeaderContainer.jsx"],"names":["React","useState","Header","connect","isOpen","setIsOpen","mapStateToProps","state","menuData","menu","menuList","mapDispatchToProps","dispatch","burgerStateCallback","setState","HeaderContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;kBAE4BF,QAAQ,CAAC,KAAD,C;;MAA7BG,M;MAAQC,S;;AAEf,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAM;AACJC,IAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,CAAWC,QADjB,CAEJ;;AAFI,GAAN;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJC,IAAAA,mBAAmB,EAAE,MAAM;AACzB,WAAKC,QAAL,CAAe;AAACV,QAAAA,MAAM,EAAE,CAAC,KAAKG,KAAL,CAAWH;AAArB,OAAf;AACD;AAHG,GAAN;AAKD,CAND;;AAQA,MAAMW,eAAe,GAAGZ,OAAO,CAACG,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CT,MAA7C,CAAxB;AAEA,eAAea,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\n\n// class HeaderContainer extends React.Component {\n//   state = {isOpen:true}\n\n// burgerStateCallback = () => this.setState ({isOpen: !this.state.isOpen});\n//\n// render () {\n//\n//   return (\n//     <StoreContext.Consumer>\n//       {\n//       (store) => {\n//         const state = store.getState();\n//         return <Header menuData={state.menu.menuList}\n//                        isOpen={this.state.isOpen}\n//                        burgerStateCallback={this.burgerStateCallback}/>\n//       }\n//     }\n//     </StoreContext.Consumer>)\n// }\n// }\n// export default HeaderContainer;\n\nconst [isOpen, setIsOpen] = useState(false);\n\nconst mapStateToProps = (state) => {\n  return{\n    menuData: state.menu.menuList,\n    // isOpen: this.state.isOpen\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    burgerStateCallback: () => {\n      this.setState ({isOpen: !this.state.isOpen})\n    }\n  }\n}\n\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header)\n\nexport default HeaderContainer;"]},"metadata":{},"sourceType":"module"}